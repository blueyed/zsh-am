#!/bin/sh

# Copyright (c) 2013, Frank Terbeck <ft@bewatermyfriend.org>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHAN-
# TABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHAT-
# SOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
# OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

pc=''

init_pc () {
    gitdir=$(git rev-parse --git-dir)
    if [ "$?" != 0 ]; then
        echo "git rev-parse failed!"
        exit 1
    fi
    pc="${gitdir}/zsh-am.post-command"
}

should_try_stdin () {
    # If there is no non-option argument or the only non-option argument is a
    # single dash ("-"), read from stdin and use that input as the mbox to work
    # on.
    [ "$#" -eq 0 ] && return 0
    [ "$#" -eq 1 ] && [ "x$1" = "x-" ] && return 0
    return 1
}

process_mbox () {
    zsh-am-xseq2subject "$1" || {
        echo "zsh-am: xseq2subject failed! (mbox: \"$1\")"
        return 1
    }
    zsh-am-and-changelog "$1" || {
        echo "zsh-am: am-and-changelog failed! (mbox: \"$1\")"
        return 1
    }
    return 0
}

is_opt () {
    case "$1" in
        -) return 1;;
        -*) return 0;;
        *) return 1;;
    esac
}

while is_opt "$1"; do
    case $1 in
        --)
            shift
            break
            ;;
        -init)
            init_pc
            cat > "$pc" <<EOF
#!/bin/sh

msg=\$(git log --format='%B' -1 'HEAD')
genchangelog -P -T -H -X -o 'HEAD^' -n 'HEAD'
git add ChangeLog
git commit --amend -m"\$msg"
EOF
            exit 0
            ;;
        -*) printf 'Unknown option: `%s'\''\n' "$1";;
    esac
done

init_pc
if [ ! -e "$pc" ]; then
    echo 'zsh-am-and-changelog: `'"$pc"\'' missing!'
    echo 'Forgot to run "zsh-am -init"?'
    exit 1
fi

if should_try_stdin; then
    mbox=$(mktemp "${TMPDIR:-/tmp}"/zsh-am.mbox.XXXXXXXXXXXX) || {
        echo "zsh-am: Could not create temporary file. Giving up."
        exit 1
    }
    cat > "$mbox"
    process_mbox "$mbox"
    rm "$mbox" || {
        echo "zsh-am: Failed to remove \"$mbox\"!"
        exit 1
    }
else
    for mbox in "$@"; do
        process_mbox "$mbox" || {
            echo "zsh-am: Processing mailbox failed: \"$mbox\"; Exiting..."
            exit 1
        }
    done
fi
exit 0
